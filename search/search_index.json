{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Projekt Micro:bit Der BBC Micro:bit ist ein kleines embedded Device mit einem ARM M-Core und einigen Sensoren, Tastern und LEDs. Die Zielgruppe des Mirco:bit sind Sch\u00fcler. Die Skripte in diesem Repository sind Inspiriert durch \"Make: Getting Started with the micro:bit\" von Wolfram Donat. Hardware Die Dokumentation f\u00fcr die Micro:bit Hardware findet sich auf tech.microbit.org . Programmieren mit MicroPython Auf der Micro:bit Seite wird ein Online Editor angeboten. Diese ist die einfachste M\u00f6glichkeit um mit dem Programmieren zu starten, und eine MicroPython hex-Datei f\u00fcr den Micro:bit zu bekommen. Wenn der Micro:bit mit dem Rechner verbunden ist erscheint er als externen Laufwerk. Die hex-Datei die mit dem Online-Editor erzeugt wurde kann auf den Microbit \u00fcbertragen werden indem sie auf dieses Laufwerk kopiert wird. Mu IDE einrichten Der Online-Editor ist f\u00fcr erste Versuche geeignet, um echte Projekte umzusetzen eignet sich eine lokale \"Integrierte Entwicklungsumgebung\" (Integrated Development Environment, IDE) besser. F\u00fcr diese Beschreibung verwende ich mu . Mu ist eine sehr einfache IDE f\u00fcr MicroPython. Mu IDE testen Stelle sicher dass dein Micro:bit mit deinem Rechner verbunden ist und das externe Laufwerk \"MICROBIT\" angezeigt wird. Starte dann Mu im Micro:bit Modus. Das erste Program mit Mu, zum testen ob die Integration funktioniert ist: from microbit import * while True: display.scroll('Hello') sleep(1000) Gib dieses Program in Mu ein und dr\u00fcck den Knopf \"Aufspielen\". Nach ein paar Sekunden erscheint auf dem LED-Display des Mirco:bit der Text \"Hello\", gefolgt von einer kurzen Pause. Mini-Projekte Nachdem Mu eingerichtet ist k\u00f6nnen wir mit ersten Mini-Projekten starten um die verf\u00fcgbaren Sensoren, Taster und Ausgabe-Optionen kennenzulernen. Die API Referenz (Application Programming Interface, API) findest du integriert im Micro:bit Python Online Editor. Dot-Matrix-Display Die Mirco:bit API stellt ein \"display\" Objekt bereit, mit dem auf einfach Texte und vordefinierte Bilder auf dem Dot-Matrix-Display angezeigt werden k\u00f6nnen. Vordefinierte Grafiken Bilder k\u00f6nnen \u00fcber Konstanten ausgew\u00e4hlt werden. Ein Herz kann z.B. mit dem folgenden Skript angezeigt werden: from microbit import * display.show(Image.HEART) sleep(1000) Die Liste mit allen vordefinierten Bildern findet sich in der API . Das folgende Skript zeigt im Wechsel das gro\u00dfe und kleine Herz dar: from microbit import * while True: display.show(Image.HEART) sleep(1000) display.show(Image.HEART_SMALL) sleep(1000) Text scrollen Text anzeigen Pixel Kn\u00f6pfe Accelerometer Bluetooth Licht-Sensor Temperatur-Sensor Kompass T\u00f6ne Mikrofon Touch-Logo Projekt Schrittz\u00e4hler Mirco:bit als Schrittz\u00e4hler Projekt Tracks Tracks aufzeichnen mit Kompass und Beschleunigungssensor","title":"Projekt Micro:bit"},{"location":"#projekt-microbit","text":"Der BBC Micro:bit ist ein kleines embedded Device mit einem ARM M-Core und einigen Sensoren, Tastern und LEDs. Die Zielgruppe des Mirco:bit sind Sch\u00fcler. Die Skripte in diesem Repository sind Inspiriert durch \"Make: Getting Started with the micro:bit\" von Wolfram Donat.","title":"Projekt Micro:bit"},{"location":"#hardware","text":"Die Dokumentation f\u00fcr die Micro:bit Hardware findet sich auf tech.microbit.org .","title":"Hardware"},{"location":"#programmieren-mit-micropython","text":"Auf der Micro:bit Seite wird ein Online Editor angeboten. Diese ist die einfachste M\u00f6glichkeit um mit dem Programmieren zu starten, und eine MicroPython hex-Datei f\u00fcr den Micro:bit zu bekommen. Wenn der Micro:bit mit dem Rechner verbunden ist erscheint er als externen Laufwerk. Die hex-Datei die mit dem Online-Editor erzeugt wurde kann auf den Microbit \u00fcbertragen werden indem sie auf dieses Laufwerk kopiert wird.","title":"Programmieren mit MicroPython"},{"location":"#mu-ide-einrichten","text":"Der Online-Editor ist f\u00fcr erste Versuche geeignet, um echte Projekte umzusetzen eignet sich eine lokale \"Integrierte Entwicklungsumgebung\" (Integrated Development Environment, IDE) besser. F\u00fcr diese Beschreibung verwende ich mu . Mu ist eine sehr einfache IDE f\u00fcr MicroPython.","title":"Mu IDE einrichten"},{"location":"#mu-ide-testen","text":"Stelle sicher dass dein Micro:bit mit deinem Rechner verbunden ist und das externe Laufwerk \"MICROBIT\" angezeigt wird. Starte dann Mu im Micro:bit Modus. Das erste Program mit Mu, zum testen ob die Integration funktioniert ist: from microbit import * while True: display.scroll('Hello') sleep(1000) Gib dieses Program in Mu ein und dr\u00fcck den Knopf \"Aufspielen\". Nach ein paar Sekunden erscheint auf dem LED-Display des Mirco:bit der Text \"Hello\", gefolgt von einer kurzen Pause.","title":"Mu IDE testen"},{"location":"#mini-projekte","text":"Nachdem Mu eingerichtet ist k\u00f6nnen wir mit ersten Mini-Projekten starten um die verf\u00fcgbaren Sensoren, Taster und Ausgabe-Optionen kennenzulernen. Die API Referenz (Application Programming Interface, API) findest du integriert im Micro:bit Python Online Editor.","title":"Mini-Projekte"},{"location":"#dot-matrix-display","text":"Die Mirco:bit API stellt ein \"display\" Objekt bereit, mit dem auf einfach Texte und vordefinierte Bilder auf dem Dot-Matrix-Display angezeigt werden k\u00f6nnen.","title":"Dot-Matrix-Display"},{"location":"#vordefinierte-grafiken","text":"Bilder k\u00f6nnen \u00fcber Konstanten ausgew\u00e4hlt werden. Ein Herz kann z.B. mit dem folgenden Skript angezeigt werden: from microbit import * display.show(Image.HEART) sleep(1000) Die Liste mit allen vordefinierten Bildern findet sich in der API . Das folgende Skript zeigt im Wechsel das gro\u00dfe und kleine Herz dar: from microbit import * while True: display.show(Image.HEART) sleep(1000) display.show(Image.HEART_SMALL) sleep(1000)","title":"Vordefinierte Grafiken"},{"location":"#text-scrollen","text":"","title":"Text scrollen"},{"location":"#text-anzeigen","text":"","title":"Text anzeigen"},{"location":"#pixel","text":"","title":"Pixel"},{"location":"#knopfe","text":"","title":"Kn\u00f6pfe"},{"location":"#accelerometer","text":"","title":"Accelerometer"},{"location":"#bluetooth","text":"","title":"Bluetooth"},{"location":"#licht-sensor","text":"","title":"Licht-Sensor"},{"location":"#temperatur-sensor","text":"","title":"Temperatur-Sensor"},{"location":"#kompass","text":"","title":"Kompass"},{"location":"#tone","text":"","title":"T\u00f6ne"},{"location":"#mikrofon","text":"","title":"Mikrofon"},{"location":"#touch-logo","text":"","title":"Touch-Logo"},{"location":"#projekt-schrittzahler","text":"Mirco:bit als Schrittz\u00e4hler","title":"Projekt Schrittz\u00e4hler"},{"location":"#projekt-tracks","text":"Tracks aufzeichnen mit Kompass und Beschleunigungssensor","title":"Projekt Tracks"}]}